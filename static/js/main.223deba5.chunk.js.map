{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","confirmedTabId","some","id","selectedTabContent","find","content","className","map","tab","title","isSelected","cn","onClick","href","App","useState","setSelectedTabId","selectedTabTitle","handleTabClick","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAiBH,EAAKI,MAAK,qBAAGC,KAAgBJ,KAChDA,EACAD,EAAK,GAAGK,GACNC,EAAqBN,EACxBO,MAAK,qBAAGF,KAAgBF,KAAgBK,QAE3C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACC,GACT,IAAQN,EAAcM,EAAdN,GAAIO,EAAUD,EAAVC,MACNC,EAAaR,IAAOF,EAE1B,OACE,oBAEEM,UAAWK,IACT,CAAE,YAAaD,IAEjB,UAAQ,MALV,SAOE,mBACEE,QAAS,kBAAOF,GAAcX,EAAcS,IAC5CK,KAAI,WAAMX,GACV,UAAQ,UAHV,SAKGO,KAXEP,UAmBf,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QC/BIN,EAAO,CAClB,CAAEK,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,gBAG7BS,EAAM,WACjB,MAA0CC,mBAASlB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBkB,EAAtB,KACMC,EAAmBpB,EACtBO,MAAK,qBAAGF,KAAgBJ,KAAeW,MAK1C,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,KAGtB,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAAAS,GAAG,OAbD,SAACA,GACtBQ,EAAiBR,EAAIN,IAYKgB,CAAeV,UC5B7CW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.223deba5.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const confirmedTabId = tabs.some(({ id }) => id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n  const selectedTabContent = tabs\n    .find(({ id }) => id === confirmedTabId).content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isSelected = id === confirmedTabId;\n\n            return (\n              <li\n                key={id}\n                className={cn(\n                  { 'is-active': isSelected },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => !isSelected && onTabSelected(tab)}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTabTitle = tabs\n    .find(({ id }) => id === selectedTabId).title;\n  const handleTabClick = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={tab => handleTabClick(tab)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}